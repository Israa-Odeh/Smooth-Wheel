/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smoothwheel;

import java.awt.LayoutManager;
import javax.swing.JFrame;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import oracle.jdbc.pool.OracleDataSource;
import java.sql.*;
import java.sql.DriverManager;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALFALAK
 */
public class Employee extends javax.swing.JFrame {

    /**
     * Creates new form emplyee
     */
    employeeTable emp;

    public Employee() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        jPanel1.setFocusable(true);
        emp = new employeeTable();
        updateCustomerTable();
    }

    public void empID(String carID) {
        this.EMPLOYEE_ID.setText(carID);
    }

    public void fname(String M) {
        this.FNAME.setText(M);
    }

    public void mname(String model) {
        this.MIDDLE_NAME.setText(model);
    }

    public void lname(String color) {
        this.Lname.setText(color);
    }

    public void emaill(String power) {
        this.EMAIL.setText(power);
    }

    public void Phone(String Fuel) {
        this.phone.setText(Fuel);
    }

    public void CITY(String Tank) {
        this.jCB1.setSelectedItem(Tank);
    }

    public void months(String rental) {
        this.Monthly_SALARY.setText(rental);
    }

    public Employee getCurrentInterface() {
        return this;
    }

    private void updateCustomerTable() {
        try {
            Connection connection = e();
            Statement newStatement = connection.createStatement();
            String query = "Select * from CAR_DEALERSHIP_EMPLOYEE";
            ResultSet result = newStatement.executeQuery(query);
            DefaultTableModel customerTablemodel = (DefaultTableModel) emp.getTableName().getModel();
            customerTablemodel.setRowCount(0);
            while (result.next()) {
                Vector carVector = new Vector();
                carVector.add(result.getString("EMPLOYEE_ID"));
                carVector.add(result.getString("FIRST_NAME"));
                carVector.add(result.getString("MIDDLE_NAME"));
                carVector.add(result.getString("LAST_NAME"));
                carVector.add(result.getString("CITY"));
                carVector.add(result.getString("PHONE_NUMBER"));
                carVector.add(result.getString("EMAIL"));
                carVector.add(result.getString("SALARY"));
                customerTablemodel.addRow(carVector);
            }
        } catch (SQLException ex) {
            ErrorNotification error = new ErrorNotification();
            error.setVisible(true);
            error.setText(ex.toString());
            callTimer(error);
        }
    }

    private void callTimer(JFrame notification) {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                notification.setVisible(false);
            }
        }, 6000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        Monthly_SALARY = new javax.swing.JTextField();
        EMAIL = new javax.swing.JTextField();
        MIDDLE_NAME = new javax.swing.JTextField();
        FNAME = new javax.swing.JTextField();
        Lname = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ReturnBack = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCB1 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        show = new javax.swing.JToggleButton();
        EMPLOYEE_ID = new javax.swing.JTextField();
        search0 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(252, 252, 252));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(null);

        jLabel16.setBackground(new Color(255,255,255,0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Phone Number");
        jLabel16.setOpaque(true);
        jPanel1.add(jLabel16);
        jLabel16.setBounds(360, 150, 270, 40);

        jLabel11.setBackground(new Color(255,255,255,0));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Employee Name");
        jLabel11.setOpaque(true);
        jPanel1.add(jLabel11);
        jLabel11.setBounds(10, 150, 270, 40);

        phone.setBackground(new Color(255,255,255,0));
        phone.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        phone.setForeground(new java.awt.Color(255, 255, 255));
        phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phone.setText("0598344176");
        phone.setToolTipText("you should start with +970");
        phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        phone.setOpaque(false);
        phone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneFocusLost(evt);
            }
        });
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        jPanel1.add(phone);
        phone.setBounds(360, 190, 270, 40);

        Monthly_SALARY.setBackground(new Color(255,255,255,0));
        Monthly_SALARY.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Monthly_SALARY.setForeground(new java.awt.Color(255, 255, 255));
        Monthly_SALARY.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Monthly_SALARY.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        Monthly_SALARY.setOpaque(false);
        Monthly_SALARY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Monthly_SALARYActionPerformed(evt);
            }
        });
        jPanel1.add(Monthly_SALARY);
        Monthly_SALARY.setBounds(700, 190, 270, 40);

        EMAIL.setBackground(new Color(255,255,255,0));
        EMAIL.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        EMAIL.setForeground(new java.awt.Color(255, 255, 255));
        EMAIL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EMAIL.setText("areenateeq@yahoo.com");
        EMAIL.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        EMAIL.setOpaque(false);
        EMAIL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EMAILFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EMAILFocusLost(evt);
            }
        });
        EMAIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EMAILActionPerformed(evt);
            }
        });
        jPanel1.add(EMAIL);
        EMAIL.setBounds(360, 70, 270, 40);

        MIDDLE_NAME.setBackground(new Color(255,255,255,0));
        MIDDLE_NAME.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        MIDDLE_NAME.setForeground(new java.awt.Color(255, 255, 255));
        MIDDLE_NAME.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MIDDLE_NAME.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        MIDDLE_NAME.setOpaque(false);
        MIDDLE_NAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIDDLE_NAMEActionPerformed(evt);
            }
        });
        jPanel1.add(MIDDLE_NAME);
        MIDDLE_NAME.setBounds(160, 250, 130, 30);

        FNAME.setBackground(new Color(255,255,255,0));
        FNAME.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        FNAME.setForeground(new java.awt.Color(255, 255, 255));
        FNAME.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FNAME.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        FNAME.setOpaque(false);
        FNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FNAMEActionPerformed(evt);
            }
        });
        jPanel1.add(FNAME);
        FNAME.setBounds(160, 210, 130, 30);

        Lname.setBackground(new Color(255,255,255,0));
        Lname.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Lname.setForeground(new java.awt.Color(255, 255, 255));
        Lname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        Lname.setOpaque(false);
        Lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnameActionPerformed(evt);
            }
        });
        jPanel1.add(Lname);
        Lname.setBounds(160, 290, 130, 30);

        jLabel15.setBackground(new Color(255,255,255,0));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("City");
        jLabel15.setOpaque(true);
        jPanel1.add(jLabel15);
        jLabel15.setBounds(700, 30, 270, 40);

        ReturnBack.setBackground(new java.awt.Color(169, 166, 166));
        ReturnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Return Back.png"))); // NOI18N
        ReturnBack.setFocusPainted(false);
        ReturnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnBackActionPerformed(evt);
            }
        });
        jPanel1.add(ReturnBack);
        ReturnBack.setBounds(10, 550, 130, 80);

        Add.setBackground(new java.awt.Color(169, 166, 166));
        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Add.png"))); // NOI18N
        Add.setFocusPainted(false);
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel1.add(Add);
        Add.setBounds(740, 550, 130, 80);

        Edit.setBackground(new java.awt.Color(169, 166, 166));
        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Edit.png"))); // NOI18N
        Edit.setFocusPainted(false);
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        jPanel1.add(Edit);
        Edit.setBounds(870, 550, 130, 80);

        delete.setBackground(new java.awt.Color(169, 166, 166));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        delete.setFocusPainted(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete);
        delete.setBounds(1000, 550, 130, 80);

        jLabel18.setBackground(new Color(255,255,255,0));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Email");
        jLabel18.setOpaque(true);
        jPanel1.add(jLabel18);
        jLabel18.setBounds(360, 30, 270, 40);

        jLabel6.setBackground(new Color(255,255,255,0));
        jLabel6.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("First name    ");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 210, 140, 30);

        jLabel8.setBackground(new Color(255,255,255,0));
        jLabel8.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Last name    ");
        jLabel8.setOpaque(true);
        jPanel1.add(jLabel8);
        jLabel8.setBounds(10, 290, 140, 30);

        jLabel7.setBackground(new Color(255,255,255,0));
        jLabel7.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Middle name    ");
        jLabel7.setOpaque(true);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 250, 140, 30);

        jCB1.setBackground(new java.awt.Color(204, 204, 255));
        jCB1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jerusalem", "Jenin", "Nablus", "Hebron", "Ramallah", "Selfit", "Bethlehem" }));
        jCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB1ActionPerformed(evt);
            }
        });
        jPanel1.add(jCB1);
        jCB1.setBounds(700, 70, 270, 40);

        jLabel19.setBackground(new Color(255,255,255,0));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Monthly Salary");
        jLabel19.setOpaque(true);
        jPanel1.add(jLabel19);
        jLabel19.setBounds(700, 150, 270, 40);

        jLabel17.setBackground(new Color(255,255,255,0));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Employee ID");
        jLabel17.setOpaque(true);
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 30, 270, 36);

        show.setBackground(new java.awt.Color(169, 166, 166));
        show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Tables.png"))); // NOI18N
        show.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showItemStateChanged(evt);
            }
        });
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });
        jPanel1.add(show);
        show.setBounds(1130, 550, 130, 80);

        EMPLOYEE_ID.setBackground(new Color(255,255,255,0));
        EMPLOYEE_ID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        EMPLOYEE_ID.setForeground(new java.awt.Color(232, 226, 226));
        EMPLOYEE_ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EMPLOYEE_ID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        EMPLOYEE_ID.setOpaque(false);
        EMPLOYEE_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EMPLOYEE_IDActionPerformed(evt);
            }
        });
        jPanel1.add(EMPLOYEE_ID);
        EMPLOYEE_ID.setBounds(10, 70, 230, 40);

        search0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        search0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search0ActionPerformed(evt);
            }
        });
        jPanel1.add(search0);
        search0.setBounds(240, 70, 40, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MainImage.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, -60, 1330, 750);

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1330, 690));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close.png"))); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 5, 40, 30));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Edwardian Script ITC", 1, 36)); // NOI18N
        jLabel3.setText("  Smooth Wheel  ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1330, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EMPLOYEE_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EMPLOYEE_IDActionPerformed
        // TODO add your handling code here:
        Connection connection = e();
        try {

            String Search = "select * from Car_Dealership_Employee where EMPLOYEE_ID =" + this.EMPLOYEE_ID.getText();

            PreparedStatement preparedStatement = connection.prepareStatement(Search);
            ResultSet rs = preparedStatement.executeQuery();

            if (rs.next()) {
                String fname = rs.getString("FIRST_NAME");
                FNAME.setText(fname);

                String mname = rs.getString("MIDDLE_NAME");
                MIDDLE_NAME.setText(mname);

                String lname = rs.getString("LAST_NAME");
                Lname.setText(lname);

                String phonen = rs.getString("PHONE_NUMBER");
                phone.setText(phonen);

                String CIT = rs.getString("CITY");
                jCB1.setSelectedItem(CIT);

                String EMAIL0 = rs.getString("EMAIL");
                EMAIL.setText(EMAIL0);

                String SALARY0 = rs.getString("SALARY");
                Monthly_SALARY.setText(SALARY0);

            }
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_EMPLOYEE_IDActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (EMPLOYEE_ID.getText().equals("") || FNAME.getText().equals("")
                || MIDDLE_NAME.getText().equals("")
                || Lname.getText().equals("") || Monthly_SALARY.getText().equals("")) {
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html>Please make sure to fill in all the required <br/> information about the Employee .</html>");
            callTimer(warning);
        } else {
            Connection connection = e();
            try {

                PreparedStatement updateStatement0 = connection.prepareStatement("select * from CAR_DEALERSHIP_EMPLOYEE  where EMPLOYEE_ID =  " + this.EMPLOYEE_ID.getText());
                ResultSet rs1 = updateStatement0.executeQuery();
                if (rs1.next()) {

                    Statement reStatement = connection.createStatement();
                    String se = "select * from customer where employee_id = " + this.EMPLOYEE_ID.getText();
                    int seyes = reStatement.executeUpdate(se);
                    if (seyes == 1) {
                        //JOptionPane.showMessageDialog(this,"no");
                        EMPLOYEE_ID.setText("");
                        FNAME.setText("");
                        MIDDLE_NAME.setText("");
                        Lname.setText("");
                        phone.setText("");
                        EMAIL.setText("");
                        Monthly_SALARY.setText("");
                        WarningNotification warning = new WarningNotification();
                        warning.setVisible(true);
                        warning.setText("<html> This employee deals with a customer! <br/> You can not remove it.</html>");
                        callTimer(warning);

                    } else {
                        Statement deleteStatement = connection.createStatement();
                        String delete = "delete from Car_Dealership_Employee where EMPLOYEE_ID =" + this.EMPLOYEE_ID.getText();
                        int isDeleted = deleteStatement.executeUpdate(delete);
                        if (isDeleted == 1) {
                            connection.commit();
                            EMPLOYEE_ID.setText("");
                            FNAME.setText("");
                            MIDDLE_NAME.setText("");
                            Lname.setText("");
                            phone.setText("");
                            EMAIL.setText("");
                            Monthly_SALARY.setText("");
                            SuccessNotification success = new SuccessNotification();
                            success.setVisible(true);
                            success.setText("The Employee is successfully deleted.");
                            callTimer(success);
                        } else {
                            WarningNotification warning = new WarningNotification();
                            warning.setVisible(true);
                            warning.setText("<html> The Employee does not exist.</html>");
                            callTimer(warning);
                        }
                    }
                    updateCustomerTable();
                    connection.close();
                } else {
                    WarningNotification warning = new WarningNotification();
                    warning.setVisible(true);
                    warning.setText("<html> This employee does not exist.</html>");
                    callTimer(warning);
                }
            } catch (SQLException ex) {
                ErrorNotification error = new ErrorNotification();
                error.setVisible(true);
                error.setText(ex.toString());
                callTimer(error);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private Connection e() {
        Connection connection = null;
        try {
            DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
            String url, username, password;
            url = "jdbc:oracle:thin:@localhost:1521:xe";
            username = "c##IsraaOdeh";
            password = "IsraaOdeh5";
            connection = DriverManager.getConnection(url, username, password);
            connection.setAutoCommit(false);
        } catch (SQLException ex) {

        }
        return connection;
    }


    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        if (EMPLOYEE_ID.getText().equals("") || FNAME.getText().equals("")
                || MIDDLE_NAME.getText().equals("")
                || Lname.getText().equals("") || Monthly_SALARY.getText().equals("")) {
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html>Please make sure to fill in all the required <br/> information about the Employee .</html>");
            callTimer(warning);
        } else {
            Connection connection = e();
            try {

                Statement newstatement = connection.createStatement();

                String sqlString = "insert into CAR_DEALERSHIP_EMPLOYEE values( '" + this.EMPLOYEE_ID.getText() + "', '" + this.FNAME.getText() + "', '" + this.MIDDLE_NAME.getText() + "', '" + this.Lname.getText() + "', '" + this.phone.getText() + "', '" + this.jCB1.getSelectedItem().toString() + "', '" + this.EMAIL.getText().toString() + "', '" + this.Monthly_SALARY.getText().toString() + "' )";

                int isAdded = newstatement.executeUpdate(sqlString);
                if (isAdded == 1) {
                    connection.commit();
                    SuccessNotification success = new SuccessNotification();
                    success.setVisible(true);
                    success.setText("<html> The Employee information is successfully added.</html>");
                    callTimer(success);
                } else {
                    ErrorNotification error = new ErrorNotification();
                    error.setVisible(true);
                    error.setText("<html> The  Employee can't be added! <br/> Please try again. <html>");
                    callTimer(error);
                }
                connection.close();

                String newRow[] = {this.EMPLOYEE_ID.getText(), this.FNAME.getText(),
                    this.MIDDLE_NAME.getText(), this.Lname.getText(),
                    this.jCB1.getSelectedItem().toString(), this.phone.getText(),
                    this.EMAIL.getText(),
                    this.Monthly_SALARY.getText()};
                employeeTable emp = new employeeTable();

                DefaultTableModel tableModel = (DefaultTableModel) emp.getTableName().getModel();
                tableModel.addRow(newRow);

                EMPLOYEE_ID.setText("");
                FNAME.setText("");
                MIDDLE_NAME.setText("");
                Lname.setText("");
                phone.setText("");
                EMAIL.setText("");
                Monthly_SALARY.setText("");
                updateCustomerTable();
            } catch (java.sql.SQLIntegrityConstraintViolationException ex) {
                ErrorNotification failed = new ErrorNotification();
                failed.setVisible(true);
                failed.setText("<html> There is an added Employee with this unique ID! <br/> please use a unique  Employee ID, Licensce ID <br/> and phone number. </html>");
                callTimer(failed);
            } catch (SQLException ex) {
                ErrorNotification error = new ErrorNotification();
                error.setVisible(true);
                error.setText("please make sure to enter valid information");
                callTimer(error);
            }

        }
    }//GEN-LAST:event_AddActionPerformed

    private void ReturnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBackActionPerformed
        new WelcomeInterface().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ReturnBackActionPerformed

    private void LnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_LnameActionPerformed

    private void FNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FNAMEActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_FNAMEActionPerformed

    private void MIDDLE_NAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIDDLE_NAMEActionPerformed

    }//GEN-LAST:event_MIDDLE_NAMEActionPerformed

    private void EMAILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EMAILActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_EMAILActionPerformed

    private void EMAILFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EMAILFocusLost
        // TODO add your handling code here:
        if (EMAIL.getText().trim().equals("") || EMAIL.getText().trim().toLowerCase().equals("areenateeq@yahoo.com")) {
            EMAIL.setText("areenateeq@yahoo.com");
            EMAIL.setForeground(new Color(236, 240, 241));
        }

    }//GEN-LAST:event_EMAILFocusLost

    private void EMAILFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EMAILFocusGained
        // TODO add your handling code here:

        if (EMAIL.getText().trim().toLowerCase().equals("areenateeq@yahoo.com")) {
            EMAIL.setText("");
            EMAIL.setForeground(new Color(236, 240, 241));

        }

    }//GEN-LAST:event_EMAILFocusGained

    private void Monthly_SALARYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Monthly_SALARYActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Monthly_SALARYActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_phoneActionPerformed

    private void phoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusLost
        // TODO add your handling code here:
        if (phone.getText().trim().equals("") || phone.getText().trim().toLowerCase().equals("0598344176)")) {
            phone.setText("0598344176");
            phone.setForeground(new Color(236, 240, 241));
        }
    }//GEN-LAST:event_phoneFocusLost

    private void phoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusGained
        // TODO add your handling code here:

        if (phone.getText().trim().toLowerCase().equals("0598344176")) {
            phone.setText("");
            phone.setForeground(new Color(236, 240, 241));

        }

    }//GEN-LAST:event_phoneFocusGained

    private void jCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB1ActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        if (EMPLOYEE_ID.getText().equals("") || FNAME.getText().equals("")
                || MIDDLE_NAME.getText().equals("")
                || Lname.getText().equals("") || Monthly_SALARY.getText().equals("")) {
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html>Please make sure to fill in all the required <br/> information about the Employee.</html>");
            callTimer(warning);
        } else {

            Connection connection = e();

            try {

                String empID = EMPLOYEE_ID.getText();
                String fnname = FNAME.getText().toString();
                String mname = MIDDLE_NAME.getText().toString();
                String lname = Lname.getText().toString();
                String phon0 = phone.getText().toString();
                String city0 = jCB1.getSelectedItem().toString();
                String Email0 = EMAIL.getText().toString();
                String months = Monthly_SALARY.getText().toString();

                PreparedStatement updateStatement0 = connection.prepareStatement("select * from CAR_DEALERSHIP_EMPLOYEE  where EMPLOYEE_ID =  " + empID);
                ResultSet rs = updateStatement0.executeQuery();
                if (rs.next()) {

                    PreparedStatement updateStatement = connection.prepareStatement("Update CAR_DEALERSHIP_EMPLOYEE set FIRST_NAME = ?, MIDDLE_NAME = ?, LAST_NAME= ?, PHONE_NUMBER = ?, "
                            + "CITY = ?, EMAIL = ?, SALARY = ? where EMPLOYEE_ID =  " + empID);

                    updateStatement.setString(1, fnname);
                    updateStatement.setString(2, mname);
                    updateStatement.setString(3, lname);
                    updateStatement.setString(4, phon0);
                    updateStatement.setString(5, city0);
                    updateStatement.setString(6, Email0);
                    updateStatement.setString(7, months);

                    updateStatement.executeQuery();

                    connection.commit();
                    EMPLOYEE_ID.setText("");
                    FNAME.setText("");
                    MIDDLE_NAME.setText("");
                    Lname.setText("");
                    phone.setText("");
                    EMAIL.setText("");
                    Monthly_SALARY.setText("");
                    SuccessNotification success = new SuccessNotification();
                    success.setVisible(true);
                    success.setText("The  data of employee is successfully updated.");
                    callTimer(success);

                    updateCustomerTable();
                    connection.close();
                } else {
                    WarningNotification warning = new WarningNotification();
                    warning.setVisible(true);
                    warning.setText("<html>this employee does not exist.</html>");
                    callTimer(warning);

                }
            } catch (SQLException ex) {
                ErrorNotification error = new ErrorNotification();
                error.setVisible(true);
                error.setText("please make sure to enter valid information");
                callTimer(error);
            }
        }
    }//GEN-LAST:event_EditActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:

        try {

            Connection conn;
            conn = e();
            Statement st = conn.createStatement();
            String strqle = "SELECT * FROM Car_Dealership_Employee ";
            ResultSet rs = st.executeQuery(strqle);

            while (rs.next()) {

                String id = rs.getString("EMPLOYEE_ID");
                String FIRSTNAME = rs.getString("FIRST_NAME");
                String MIDDLENAME = rs.getString("MIDDLE_NAME");
                String LASTNAME = rs.getString("LAST_NAME");
                String PHONENUMBER = rs.getString("PHONE_NUMBER ");
                String City = rs.getString("CITY");
                String Email = rs.getString("EMAIL");
                String SALARY0 = rs.getString("SALARY");

                String tbdata[] = {id, FIRSTNAME, MIDDLENAME, LASTNAME, PHONENUMBER, City, Email, SALARY0};

                employeeTable tb1 = new employeeTable();

                DefaultTableModel tableModel = (DefaultTableModel) tb1.getTableName().getModel();
                tableModel.addRow(tbdata);

            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_showActionPerformed

    private void showItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            emp.setVisible(true);
            ReturnBack.setEnabled(false);
            Add.setEnabled(false);
            Edit.setEnabled(false);
            delete.setEnabled(false);
            show.setBackground(Color.WHITE);
        } else {
            emp.setVisible(false);
            ReturnBack.setEnabled(true);
            Add.setEnabled(true);
            Edit.setEnabled(true);
            delete.setEnabled(true);
            show.setBackground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_showItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

        System.exit(0);

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setBackground(Color.red);
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setBackground(Color.white);


    }//GEN-LAST:event_jButton1MouseExited

    private void search0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search0ActionPerformed
        // TODO add your handling code here:

        if (EMPLOYEE_ID.getText().equals("") && FNAME.getText().equals("")
                && MIDDLE_NAME.getText().equals("") && Lname.getText().equals("")
                && Monthly_SALARY.getText().equals("")) {

            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html> Please make sure to fill employee ID <br/> to search about a specific employee. </html>");
            callTimer(warning);
        } else if (!(EMPLOYEE_ID.getText().equals("")) && FNAME.getText().equals("")
                && MIDDLE_NAME.getText().equals("") && Lname.getText().equals("")
                && Monthly_SALARY.getText().equals("")) {
            Connection connection = e();
            try {

                String empID = EMPLOYEE_ID.getText();

                String Search = "select * from CAR_DEALERSHIP_EMPLOYEE where EMPLOYEE_ID=" + empID;

                PreparedStatement preparedStatement = connection.prepareStatement(Search);
                ResultSet rs = preparedStatement.executeQuery();

                if (rs.next()) {
                    String fname00 = rs.getString("FIRST_NAME");
                    FNAME.setText(fname00);

                    String mname0 = rs.getString("MIDDLE_NAME");
                    MIDDLE_NAME.setText(mname0);

                    String lname0 = rs.getString("LAST_NAME");
                    Lname.setText(lname0);

                    String lid = rs.getString("PHONE_NUMBER");
                    phone.setText(lid);

                    String PHO = rs.getString("CITY");
                    jCB1.setSelectedItem(PHO);

                    String CITY0 = rs.getString("EMAIL");
                    EMAIL.setText(CITY0);

                    String EMP0 = rs.getString("SALARY");
                    Monthly_SALARY.setText(EMP0);

                }
            } catch (SQLException ex) {
                WarningNotification warning = new WarningNotification();
                warning.setVisible(true);
                warning.setText("Please make sure to enter vaild information!");
                callTimer(warning);
            }
        } else {
            //JOptionPane.showMessageDialog(this, "NO");
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html> Please make sure to search using the Customer ID only! </html>");
            callTimer(warning);

        }

    }//GEN-LAST:event_search0ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField EMAIL;
    private javax.swing.JTextField EMPLOYEE_ID;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField FNAME;
    private javax.swing.JTextField Lname;
    private javax.swing.JTextField MIDDLE_NAME;
    private javax.swing.JTextField Monthly_SALARY;
    private javax.swing.JButton ReturnBack;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCB1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField phone;
    private javax.swing.JButton search0;
    private javax.swing.JToggleButton show;
    // End of variables declaration//GEN-END:variables
}
