package smoothwheel;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;

import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ALFALAK
 */
public class CustomerRegistration extends javax.swing.JFrame {

    /**
     * Creates new form elevenonde
     */
    customerTable cus;

    public CustomerRegistration() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        empl();
        cus = new customerTable();
        updateCustomerTable();
    }

    public void cusID(String carID) {
        this.customerID.setText(carID);
    }

    public void fname(String M) {
        this.fname.setText(M);
    }

    public void mname(String model) {
        this.mname.setText(model);
    }

    public void empid(String color) {
        this.emp_ID.setSelectedItem(color);
    }

    public void lname(String power) {
        this.Lname.setText(power);
    }

    public void Phone(String Fuel) {
        this.phone.setText(Fuel);
    }

    public void CITY(String Tank) {
        this.CITY.setSelectedItem(Tank);
    }

    public void LicenseID(String rental) {
        this.License_ID.setText(rental);
    }

    public CustomerRegistration getCurrentInterface() {
        return this;
    }

    private void updateCustomerTable() {
        try {
            Connection connection = e();
            Statement newStatement = connection.createStatement();
            String query = "Select * from customer";
            ResultSet result = newStatement.executeQuery(query);
            DefaultTableModel customerTablemodel = (DefaultTableModel) cus.getTableName().getModel();
            customerTablemodel.setRowCount(0);
            while (result.next()) {
                Vector carVector = new Vector();
                //for(int i = 1; i <= NumOfColumns; i++) { no need for this for loop
                carVector.add(result.getString("CUSTOMER_ID"));
                carVector.add(result.getString("FIRST_NAME"));
                carVector.add(result.getString("MIDDLE_NAME"));
                carVector.add(result.getString("LAST_NAME"));
                carVector.add(result.getString("LICENSE_ID"));
                carVector.add(result.getString("PHONE_NUMBER"));
                carVector.add(result.getString("CITY"));
                carVector.add(result.getString("EMPLOYEE_ID"));

                // }
                customerTablemodel.addRow(carVector);
            }
        } catch (SQLException ex) {
            ErrorNotification error = new ErrorNotification();
            error.setVisible(true);
            error.setText(ex.toString());
            callTimer(error);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void callTimer(JFrame notification) {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                notification.setVisible(false);
            }
        }, 6000);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        CITY = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        mname = new javax.swing.JTextField();
        Lname = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        License_ID = new javax.swing.JTextField();
        customerID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ReturnBack = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        show = new javax.swing.JToggleButton();
        emp_ID = new javax.swing.JComboBox<>();
        Search0 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(252, 252, 252));
        jPanel1.setMinimumSize(new java.awt.Dimension(1330, 729));
        jPanel1.setPreferredSize(new java.awt.Dimension(1330, 729));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(1330, 690));
        jPanel2.setPreferredSize(new java.awt.Dimension(1330, 690));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setBackground(new Color(255,255,255,0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Phone Number");
        jLabel16.setOpaque(true);
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 270, 40));

        jLabel12.setBackground(new Color(255,255,255,0));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Employee ID");
        jLabel12.setOpaque(true);
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 270, 40));

        jLabel9.setBackground(new Color(255,255,255,0));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Customer name");
        jLabel9.setOpaque(true);
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 270, 40));

        CITY.setBackground(new Color(153,153,153));
        CITY.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        CITY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jerusalem", "Jenin", "Nablus", "Hebron", "Ramallah", "Selfit", "Bethlehem" }));
        CITY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CITYActionPerformed(evt);
            }
        });
        jPanel2.add(CITY, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, 270, 40));

        jLabel8.setBackground(new Color(255,255,255,0));
        jLabel8.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Last name    ");
        jLabel8.setOpaque(true);
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 140, 30));

        jLabel7.setBackground(new Color(255,255,255,0));
        jLabel7.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Middle name    ");
        jLabel7.setOpaque(true);
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 140, 30));

        jLabel6.setBackground(new Color(255,255,255,0));
        jLabel6.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("First name    ");
        jLabel6.setOpaque(true);
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 140, 30));

        jLabel13.setBackground(new Color(255,255,255,0));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("License ID");
        jLabel13.setOpaque(true);
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 270, 40));

        fname.setBackground(new Color(255,255,255,0));
        fname.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        fname.setForeground(new java.awt.Color(232, 226, 226));
        fname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        fname.setOpaque(false);
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        jPanel2.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 120, 30));

        mname.setBackground(new Color(255,255,255,0));
        mname.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mname.setForeground(new java.awt.Color(232, 226, 226));
        mname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        mname.setOpaque(false);
        mname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnameActionPerformed(evt);
            }
        });
        jPanel2.add(mname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 120, 30));

        Lname.setBackground(new Color(255,255,255,0));
        Lname.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Lname.setForeground(new java.awt.Color(232, 226, 226));
        Lname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        Lname.setOpaque(false);
        Lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnameActionPerformed(evt);
            }
        });
        jPanel2.add(Lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 120, 30));

        phone.setBackground(new Color(255,255,255,0));
        phone.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        phone.setForeground(new java.awt.Color(255, 255, 255));
        phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phone.setText("0598344176");
        phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        phone.setOpaque(false);
        phone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneFocusLost(evt);
            }
        });
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        jPanel2.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 270, 40));

        License_ID.setBackground(new Color(255,255,255,0));
        License_ID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        License_ID.setForeground(new java.awt.Color(232, 226, 226));
        License_ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        License_ID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        License_ID.setOpaque(false);
        License_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                License_IDActionPerformed(evt);
            }
        });
        jPanel2.add(License_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 270, 40));

        customerID.setBackground(new Color(255,255,255,0));
        customerID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        customerID.setForeground(new java.awt.Color(255, 255, 255));
        customerID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        customerID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        customerID.setOpaque(false);
        customerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerIDActionPerformed(evt);
            }
        });
        jPanel2.add(customerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 230, 40));

        jLabel15.setBackground(new Color(255,255,255,0));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("City");
        jLabel15.setOpaque(true);
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 150, 270, 40));

        jLabel11.setBackground(new Color(255,255,255,0));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Customer ID");
        jLabel11.setOpaque(true);
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 270, 36));

        ReturnBack.setBackground(new java.awt.Color(169, 166, 166));
        ReturnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Return Back.png"))); // NOI18N
        ReturnBack.setFocusPainted(false);
        ReturnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnBackActionPerformed(evt);
            }
        });
        jPanel2.add(ReturnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 130, 80));

        Edit.setBackground(new java.awt.Color(169, 166, 166));
        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Edit.png"))); // NOI18N
        Edit.setFocusPainted(false);
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        jPanel2.add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 550, 170, 80));

        Add.setBackground(new java.awt.Color(169, 166, 166));
        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Add.png"))); // NOI18N
        Add.setFocusPainted(false);
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel2.add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 550, 180, 80));

        show.setBackground(new java.awt.Color(169, 166, 166));
        show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Tables.png"))); // NOI18N
        show.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showItemStateChanged(evt);
            }
        });
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });
        jPanel2.add(show, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 550, 170, 80));

        emp_ID.setBackground(new java.awt.Color(204, 204, 255));
        emp_ID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        emp_ID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(emp_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 270, 40));

        Search0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        Search0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search0ActionPerformed(evt);
            }
        });
        jPanel2.add(Search0, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 73, 40, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MainImage.jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -60, 1330, 750));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 39, 1330, 690));

        close.setBackground(new java.awt.Color(255, 255, 255));
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        jPanel1.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 5, 40, 30));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Edwardian Script ITC", 1, 36)); // NOI18N
        jLabel1.setText("  Smooth Wheel  ");
        jLabel1.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 890));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void empl() {
        try {
            Connection con = e();

            PreparedStatement pst = con.prepareStatement("select * from car_dealership_employee");
            ResultSet rs = pst.executeQuery();
            emp_ID.removeAllItems();

            while (rs.next()) {
                emp_ID.addItem(rs.getString(1));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Return.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameActionPerformed

    private void LnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LnameActionPerformed

    private void mnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnameActionPerformed

    private void ReturnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBackActionPerformed
        new WelcomeInterface().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_ReturnBackActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed

        if (customerID.getText().equals("") || fname.getText().equals("")
                || mname.getText().equals("")
                || Lname.getText().equals("") || License_ID.getText().equals("")) {
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html>Please make sure to fill in all the required <br/> information about the customer .</html>");
            callTimer(warning);
        } else {
            Connection connection = e();
            try {

                Statement checkCarID = connection.createStatement();
                String checkQuery = "Select  employee_id from customer where employee_id  = " + emp_ID.getSelectedItem().toString();
                ResultSet checkResult = checkCarID.executeQuery(checkQuery);
                boolean found = checkResult.next();
                if (found == true) {

                    WarningNotification warning = new WarningNotification();
                    warning.setVisible(true);
                    warning.setText("<html> The Employee with the selected ID is related <br/> with another Customer! Choose another one.</html>");
                    callTimer(warning);
                } else {

                    Statement newstatement = connection.createStatement();

                    String sqlString = "insert into customer values( '" + this.customerID.getText() + "', '" + this.fname.getText() + "', '" + this.mname.getText() + "', '" + this.Lname.getText() + "', '" + this.License_ID.getText() + "', '" + this.phone.getText().toString() + "', '" + this.CITY.getSelectedItem().toString() + "', '" + this.emp_ID.getSelectedItem().toString() + "' )";
                    int isAdded = newstatement.executeUpdate(sqlString);
                    if (isAdded == 1) {
                        //JOptionPane.showMessageDialog(this, "ok");
                        connection.commit();
                        SuccessNotification success = new SuccessNotification();
                        success.setVisible(true);
                        success.setText("<html> The customer information is successfully added.</html>");
                        callTimer(success);
                    } else {
                        ErrorNotification error = new ErrorNotification();
                        error.setVisible(true);
                        error.setText("<html> The  customer can't be added! <br/> Please try again. <html>");
                        callTimer(error);

                    }
                    connection.close();

                    String newRow[] = {this.customerID.getText(), this.fname.getText(),
                        this.mname.getText(), this.Lname.getText(),
                        this.License_ID.getText(), this.phone.getText(),
                        this.CITY.getSelectedItem().toString(),
                        this.emp_ID.getSelectedItem().toString()};

                    customerTable emp = new customerTable();

                    DefaultTableModel tableModel = (DefaultTableModel) emp.getTableName().getModel();
                    tableModel.addRow(newRow);

                    customerID.setText("");
                    fname.setText("");
                    mname.setText("");
                    Lname.setText("");
                    phone.setText("");
                    License_ID.setText("");

                    updateCustomerTable();
                    // JOptionPane.showMessageDialog(this, "add");

                }
            } catch (java.sql.SQLIntegrityConstraintViolationException ex) {
                // JOptionPane.showMessageDialog(this, "e1");

                ErrorNotification failed = new ErrorNotification();
                failed.setVisible(true);
                failed.setText("<html> There is an added customer with this ID <br/> and unique information!. </html>");
                callTimer(failed);
            } catch (SQLException ex) {
                // JOptionPane.showMessageDialog(this, "e2");

                ErrorNotification error = new ErrorNotification();
                error.setVisible(true);
                error.setText("please make sure to enter valid information");
                callTimer(error);
            }
        }
    }//GEN-LAST:event_AddActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed

        if (customerID.getText().equals("") || fname.getText().equals("")
                || mname.getText().equals("")
                || Lname.getText().equals("") || License_ID.getText().equals("")) {
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html> Please make sure to search about a specific Customer <br/> by the Customer ID or simply select a specific row <br/> from the Customers' table to update.</html>");
            callTimer(warning);

        } else {

            Connection connection = e();

            try {

                String cusID = customerID.getText();
                String fnname = fname.getText().toString();
                String midname = mname.getText().toString();
                String lname = Lname.getText().toString();
                String emp = emp_ID.getSelectedItem().toString();
                String city0 = CITY.getSelectedItem().toString();
                String phon0 = phone.getText().toString();
                String lic = License_ID.getText().toString();

                PreparedStatement updateStatement = connection.prepareStatement("Update CUSTOMER  set FIRST_NAME = ?, MIDDLE_NAME = ?, LAST_NAME = ?, LICENSE_ID = ?, "
                        + "PHONE_NUMBER = ?, CITY = ?, EMPLOYEE_ID = ? where CUSTOMER_ID =  " + cusID);

                updateStatement.setString(1, fnname);
                updateStatement.setString(2, midname);
                updateStatement.setString(3, lname);
                updateStatement.setString(4, lic);
                updateStatement.setString(5, phon0);
                updateStatement.setString(6, city0);
                updateStatement.setString(7, emp);

                //     JOptionPane.showMessageDialog(this, "ok");
                updateStatement.executeQuery();
                connection.commit();
                customerID.setText("");
                fname.setText("");
                mname.setText("");
                Lname.setText("");
                phone.setText("");
                License_ID.setText("");
                updateCustomerTable();
                SuccessNotification success = new SuccessNotification();
                success.setVisible(true);
                success.setText("<html> The Customer information is successfully updated.</html>");
                callTimer(success);

                connection.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(this, "no2");

                ErrorNotification error = new ErrorNotification();
                error.setVisible(true);
                error.setText("please make sure to enter valid information");
                callTimer(error);
            }

        }
    }//GEN-LAST:event_EditActionPerformed

    private void showItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cus.setVisible(true);
            ReturnBack.setEnabled(false);
            Add.setEnabled(false);
            Edit.setEnabled(false);
            show.setBackground(Color.WHITE);
        } else {
            cus.setVisible(false);
            ReturnBack.setEnabled(true);
            Add.setEnabled(true);
            Edit.setEnabled(true);
            show.setBackground(Color.LIGHT_GRAY);
        }


    }//GEN-LAST:event_showItemStateChanged

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed

    }//GEN-LAST:event_showActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_phoneActionPerformed

    private void phoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusGained
        // TODO add your handling code here:
        if (phone.getText().trim().toLowerCase().equals("0598344176")) {
            phone.setText("");
            phone.setForeground(new Color(236, 240, 241));

        }
    }//GEN-LAST:event_phoneFocusGained

    private void phoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusLost
        // TODO add your handling code here:
        if (phone.getText().trim().equals("") || phone.getText().trim().toLowerCase().equals("0598344176)")) {
            phone.setText("0598344176");
            phone.setForeground(new Color(236, 240, 241));
        }
    }//GEN-LAST:event_phoneFocusLost

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        // TODO add your handling code here:
        close.setBackground(Color.red);
    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
        // TODO add your handling code here:
        close.setBackground(Color.white);

    }//GEN-LAST:event_closeMouseExited

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeActionPerformed

    private void customerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerIDActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_customerIDActionPerformed

    private void CITYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CITYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CITYActionPerformed

    private void Search0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search0ActionPerformed

        if (customerID.getText().equals("") && fname.getText().equals("")
                && mname.getText().equals("") && Lname.getText().equals("")
                && License_ID.getText().equals("")) {

            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html> Please make sure to fill  customer ID <br/> to search about a specific customer. </html>");
            callTimer(warning);
        } else if (!(customerID.getText().equals("")) && fname.getText().equals("")
                && mname.getText().equals("") && Lname.getText().equals("")
                && License_ID.getText().equals("")) {
            Connection connection = e();
            try {

                String Search = "select * from CUSTOMER where CUSTOMER_ID =" + this.customerID.getText();

                PreparedStatement preparedStatement = connection.prepareStatement(Search);
                ResultSet rs = preparedStatement.executeQuery();

                if (rs.next()) {
                    String fname0 = rs.getString("FIRST_NAME");
                    fname.setText(fname0);

                    String mname0 = rs.getString("MIDDLE_NAME");
                    mname.setText(mname0);

                    String lname0 = rs.getString("LAST_NAME");
                    Lname.setText(lname0);

                    String lid = rs.getString("LICENSE_ID");
                    License_ID.setText(lid);

                    String PHO = rs.getString("PHONE_NUMBER");
                    phone.setText(PHO);

                    String CITY0 = rs.getString("CITY");
                    CITY.setSelectedItem(CITY0);

                    String EMP0 = rs.getString("EMPLOYEE_ID");
                    emp_ID.setSelectedItem(EMP0);

                }
            } catch (SQLException ex) {
                Logger.getLogger(CustomerRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //JOptionPane.showMessageDialog(this, "NO");
            WarningNotification warning = new WarningNotification();
            warning.setVisible(true);
            warning.setText("<html> Please make sure to search using the Customer ID only! </html>");
            callTimer(warning);

        }
    }//GEN-LAST:event_Search0ActionPerformed

    private void License_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_License_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_License_IDActionPerformed

    /**
     * @param args the command line arguments
     */
    private Connection e() {
        Connection connection = null;
        try {
            DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
            String url, username, password;
            url = "jdbc:oracle:thin:@localhost:1521:xe";
            username = "c##IsraaOdeh";
            password = "IsraaOdeh5";
            connection = DriverManager.getConnection(url, username, password);
            connection.setAutoCommit(false);
        } catch (SQLException ex) {
            // JOptionPane.showMessageDialog(null, ex.toString());
            //Logger.getLogger(Maintenance.class.getName()).log(Level.SEVERE, null, ex);
        }
        return connection;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JComboBox<String> CITY;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField License_ID;
    private javax.swing.JTextField Lname;
    private javax.swing.JButton ReturnBack;
    private javax.swing.JButton Search0;
    private javax.swing.JButton close;
    private javax.swing.JTextField customerID;
    private javax.swing.JComboBox<String> emp_ID;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField mname;
    private javax.swing.JTextField phone;
    private javax.swing.JToggleButton show;
    // End of variables declaration//GEN-END:variables
}
